> Executing task in folder test-rust-macros: scripts/expand-macros.sh ; cargo build <

+ rustup default nightly
info: using existing install for 'nightly-x86_64-apple-darwin'
info: default toolchain set to 'nightly-x86_64-apple-darwin'

  nightly-x86_64-apple-darwin unchanged - rustc 1.37.0-nightly (5f9c0448d 2019-06-25)

+ cargo rustc -- -Z unstable-options --pretty expanded
   Compiling macros v0.1.0 (/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/macros)
   Compiling mynewt v0.1.0 (/Users/Luppy/mynewt/stm32bluepill-mynewt-sensor/rust/mynewt)
   Compiling test-rust-macros v0.1.0 (/Users/Luppy/mynewt/test-rust-macros)
    Finished dev [unoptimized + debuginfo] target(s) in 6.32s
   Compiling test-rust-macros v0.1.0 (/Users/Luppy/mynewt/test-rust-macros)
fname: "start_sensor_listener"
para: "sensor"
para: "sensor_type"
para: "poll_time"
#s src/main.rs | 42 | 90 | 50 | 5
#s src/main.rs | 43 | 8 | 43 | 53
#s src/main.rs | 43 | 8 | 43 | 51
#s src/main.rs | 43 | 8 | 43 | 51
fname: "sensor::set_poll_rate_ms"
#m sensor::set_poll_rate_ms | src/main.rs | 43 | 8 | 43 | 51
sensor has inferred type &Strn
#i start_sensor_listener | sensor | sensor::set_poll_rate_ms | devname | &Strn
poll_time has inferred type u32
#i start_sensor_listener | poll_time | sensor::set_poll_rate_ms | poll_rate | u32
#s src/main.rs | 43 | 8 | 43 | 51
#s src/main.rs | 43 | 8 | 43 | 51
#s src/main.rs | 43 | 8 | 43 | 53
#s src/main.rs | 44 | 28 | 44 | 81
#s src/main.rs | 44 | 28 | 44 | 79
#s src/main.rs | 44 | 28 | 44 | 79
fname: "sensor::mgr_find_next_bydevname"
#m sensor::mgr_find_next_bydevname | src/main.rs | 44 | 28 | 44 | 79
sensor has inferred type &Strn
#i start_sensor_listener | sensor | sensor::mgr_find_next_bydevname | devname | &Strn
null_mut() has inferred type *mut sensor
#i start_sensor_listener | null_mut() | sensor::mgr_find_next_bydevname | prev_cursor | *mut sensor
#s src/main.rs | 44 | 28 | 44 | 79
#s src/main.rs | 44 | 28 | 44 | 79
#s src/main.rs | 44 | 28 | 44 | 81
#s src/main.rs | 45 | 8 | 48 | 9
#s src/main.rs | 45 | 11 | 45 | 38
#s src/main.rs | 45 | 11 | 45 | 24
#s src/main.rs | 45 | 11 | 45 | 24
#s src/main.rs | 45 | 28 | 45 | 38
#s src/main.rs | 45 | 28 | 45 | 38
fname: "null_mut"
load_decls: test.json, "{\"send_sensor_data\":[[\"sensor_data\",\"&SensorValue\"]]}"
#s src/main.rs | 45 | 28 | 45 | 38
#s src/main.rs | 45 | 11 | 45 | 38
#s src/main.rs | 45 | 39 | 48 | 9
#s src/main.rs | 46 | 27 | 46 | 81
#s src/main.rs | 46 | 27 | 46 | 79
#s src/main.rs | 46 | 27 | 46 | 79
fname: "new_sensor_listener"
#m new_sensor_listener | src/main.rs | 46 | 27 | 46 | 79
sensor_type has inferred type sensor_type_t
#i start_sensor_listener | sensor_type | new_sensor_listener | sl_sensor_type | sensor_type_t
handle_sensor_data has inferred type sensor_data_func
#i start_sensor_listener | handle_sensor_data | new_sensor_listener | sl_func | sensor_data_func
#s src/main.rs | 46 | 27 | 46 | 79
#s src/main.rs | 46 | 27 | 46 | 79
#s src/main.rs | 46 | 27 | 46 | 81
#s src/main.rs | 47 | 12 | 47 | 64
#s src/main.rs | 47 | 12 | 47 | 62
#s src/main.rs | 47 | 12 | 47 | 62
fname: "sensor::register_listener"
#m sensor::register_listener | src/main.rs | 47 | 12 | 47 | 62
sensor_object has inferred type *mut sensor
#i start_sensor_listener | sensor_object | sensor::register_listener | sensor | *mut sensor
listener has inferred type sensor_listener
#i start_sensor_listener | listener | sensor::register_listener | listener | sensor_listener
#s src/main.rs | 47 | 12 | 47 | 62
#s src/main.rs | 47 | 12 | 47 | 62
#s src/main.rs | 47 | 12 | 47 | 64
#s src/main.rs | 45 | 39 | 48 | 9
#s src/main.rs | 45 | 8 | 48 | 9
#s src/main.rs | 49 | 8 | 49 | 14
#s src/main.rs | 49 | 8 | 49 | 14
fname: "Ok"
#s src/main.rs | 49 | 8 | 49 | 14
#s src/main.rs | 42 | 90 | 50 | 5
save_decls: test.json, "{\"send_sensor_data\":[[\"sensor_data\",\"&SensorValue\"]],\"start_sensor_listener\":[[\"sensor\",\"&Strn\"],[\"sensor_type\",\"sensor_type_t\"],[\"poll_time\",\"u32\"]]}"
successfully wrote to test.json
fname: "handle_sensor_data2"
para: "sensor_data"
#s src/main.rs | 55 | 63 | 58 | 5
#s src/main.rs | 56 | 8 | 56 | 39
#s src/main.rs | 56 | 8 | 56 | 37
#s src/main.rs | 56 | 8 | 56 | 37
fname: "send_sensor_data"
#m send_sensor_data | src/main.rs | 56 | 8 | 56 | 37
sensor_data has inferred type &SensorValue
#i handle_sensor_data2 | sensor_data | send_sensor_data | sensor_data | &SensorValue
#s src/main.rs | 56 | 8 | 56 | 37
#s src/main.rs | 56 | 8 | 56 | 37
#s src/main.rs | 56 | 8 | 56 | 39
#s src/main.rs | 57 | 8 | 57 | 14
#s src/main.rs | 57 | 8 | 57 | 14
fname: "Ok"
#s src/main.rs | 57 | 8 | 57 | 14
#s src/main.rs | 55 | 63 | 58 | 5
save_decls: test.json, "{\"handle_sensor_data2\":[[\"sensor_data\",\"&SensorValue\"]],\"send_sensor_data\":[[\"sensor_data\",\"&SensorValue\"]]}"
successfully wrote to test.json
fname: "send_sensor_data"
para: "sensor_data"
#s src/main.rs | 63 | 60 | 74 | 5
#s src/main.rs | 64 | 24 | 64 | 57
#s src/main.rs | 64 | 24 | 64 | 55
#s src/main.rs | 64 | 24 | 64 | 55
fname: "sensor_network::get_device_id"
#s src/main.rs | 64 | 24 | 64 | 55
#s src/main.rs | 64 | 24 | 64 | 57
#s src/main.rs | 65 | 28 | 65 | 76
#s src/main.rs | 65 | 28 | 65 | 74
#s src/main.rs | 65 | 28 | 65 | 74
fname: "sensor_network::init_server_post"
#s src/main.rs | 65 | 28 | 65 | 74
#s src/main.rs | 65 | 28 | 65 | 76
#s src/main.rs | 66 | 8 | 72 | 9
#s src/main.rs | 66 | 11 | 66 | 24
#s src/main.rs | 66 | 11 | 66 | 24
#s src/main.rs | 66 | 25 | 72 | 9
#s src/main.rs | 67 | 26 | 70 | 14
#s src/main.rs | 67 | 26 | 70 | 14
#m coap | src/main.rs | 67 | 26 | 70 | 14
sensor_data has inferred type &SensorValue
#i send_sensor_data | sensor_data | coap | singleton | &SensorValue
#s src/main.rs | 67 | 26 | 70 | 14
#s src/main.rs | 67 | 26 | 70 | 14
#s src/main.rs | 71 | 12 | 71 | 46
#s src/main.rs | 71 | 12 | 71 | 44
#s src/main.rs | 71 | 12 | 71 | 44
fname: "sensor_network::do_server_post"
#s src/main.rs | 71 | 12 | 71 | 44
#s src/main.rs | 71 | 12 | 71 | 46
#s src/main.rs | 66 | 25 | 72 | 9
#s src/main.rs | 66 | 8 | 72 | 9
#s src/main.rs | 73 | 8 | 73 | 14
#s src/main.rs | 73 | 8 | 73 | 14
fname: "Ok"
#s src/main.rs | 73 | 8 | 73 | 14
#s src/main.rs | 63 | 60 | 74 | 5
save_decls: test.json, "{\"send_sensor_data\":[[\"sensor_data\",\"&SensorValue\"]]}"
successfully wrote to test.json
error[E0308]: mismatched types
  --> src/main.rs:67:27
   |
67 |               let payload = coap!( @json {        
   |  ___________________________^
68 | |                 "device": &device_id,
69 | |                 sensor_data,
70 | |             });
   | |______________^ expected i8, found u8
   |
   = note: expected type `*const i8`
              found type `*const u8`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/main.rs:67:27
   |
67 |               let payload = coap!( @json {        
   |  ___________________________^
68 | |                 "device": &device_id,
69 | |                 sensor_data,
70 | |             });
   | |______________^ expected i8, found u8
   |
   = note: expected type `*const i8`
              found type `*const u8`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/main.rs:67:27
   |
67 |               let payload = coap!( @json {        
   |  ___________________________^
68 | |                 "device": &device_id,
69 | |                 sensor_data,
70 | |             });
   | |______________^ expected i8, found u8
   |
   = note: expected type `*const i8`
              found type `*const u8`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/main.rs:67:27
   |
67 |               let payload = coap!( @json {        
   |  ___________________________^
68 | |                 "device": &device_id,
69 | |                 sensor_data,
70 | |             });
   | |______________^ expected i8, found u8
   |
   = note: expected type `*const i8`
              found type `*const u8`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/main.rs:67:27
   |
67 |               let payload = coap!( @json {        
   |  ___________________________^
68 | |                 "device": &device_id,
69 | |                 sensor_data,
70 | |             });
   | |______________^ expected i8, found u8
   |
   = note: expected type `*const i8`
              found type `*const u8`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/main.rs:67:27
   |
67 |               let payload = coap!( @json {        
   |  ___________________________^
68 | |                 "device": &device_id,
69 | |                 sensor_data,
70 | |             });
   | |______________^ expected i8, found u8
   |
   = note: expected type `*const i8`
              found type `*const u8`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0308]: mismatched types
  --> src/main.rs:67:27
   |
67 |               let payload = coap!( @json {        
   |  ___________________________^
68 | |                 "device": &device_id,
69 | |                 sensor_data,
70 | |             });
   | |______________^ expected i8, found u8
   |
   = note: expected type `*const i8`
              found type `*const u8`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error: aborting due to 7 previous errors

For more information about this error, try `rustc --explain E0308`.
error: Could not compile `test-rust-macros`.

To learn more, run the command again with --verbose.
The terminal process terminated with exit code: 101

Terminal will be reused by tasks, press any key to close it.
